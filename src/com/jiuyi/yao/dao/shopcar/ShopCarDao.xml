<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuyi.yao.dao.shopcar.ShopCarDao">
	<!-- 1.查询用户购物车 -->
	<select id="queryShopCar" parameterType="ShopCarDto" resultType="ShopCarDto">
		select a.*,b.prod_name, b.prod_certno, b.prod_discount, b.prod_function, b.img_id, b.prod_taboo,b.prod_xl, 
			c.prod_format, c.prod_pack, c.prod_unit, c.prod_price, c.prod_sku, d.img_src, d.img_type from ShopCar a 
			left join Products b on a.prod_id = b.prod_id
			left join Formats c on a.format_id = c.format_id
			left join Img d on b.img_id = d.img_id 
			where 1=1
			<if test="user_id != null">
				and a.user_id = #{user_id}
			</if>
			
			<if test="ieme != null">
				and a.ieme = #{ieme}
			</if>
			
			<if test="prod_id != null">
				and a.prod_id = #{prod_id}
			</if>
			
			<if test="format_id != null">
				and a.format_id = #{format_id}
			</if>
			<if test="car_id ！= null">
				and a.car_id = #{car_id}
			</if>
	</select>
	
	<!-- 2.添加购物车 -->
	<insert id="insertShopCar" parameterType="ShopCarDto">
		insert into ShopCar 
		(
			car_id, 		user_id, 		ieme, 		prod_id, 		buy_count, 		car_status, 		format_id
		)
		values
		(
			#{car_id},		#{user_id},		#{ieme},	#{prod_id},		#{buy_count},	#{car_status},		#{format_id}
		)
	</insert>
	
	<!-- 3.添加购物车数量 -->
	<update id="upShopCar" parameterType="ShopCarDto">
		update ShopCar set buy_count = buy_count + #{buy_count}
		where 1=1
		<if test="user_id != null">
			and user_id = #{user_id}
		</if>
		<if test="ieme != null">
			and ieme = #{ieme}
		</if>
		<if test="prod_id != null">
			and prod_id = #{prod_id}
		</if>
		<if test="format_id != null">
			and format_id = #{format_id}
		</if>
		<if test="car_id != null">
			and car_id = #{car_id}
		</if>
		
	</update>
	
	<!-- 4.减少数量购物车 -->
	<update id="downShopCar" parameterType="ShopCarDto">
		update ShopCar set buy_count = buy_count - #{buy_count}
		where buy_count &gt; #{buy_count}
		<if test="user_id != null">
			and user_id = #{user_id}
		</if>
		<if test="ieme != null">
			and ieme = #{ieme}
		</if>
		<if test="prod_id != null">
			and prod_id = #{prod_id}
		</if>
		<if test="format_id != null">
			and format_id = #{format_id}
		</if>
		<if test="car_id != null">
			and car_id = #{car_id}
		</if>
		
	</update>
	
	<!-- 5.删除购物车 -->
	<delete id="deleteShopCarByCarId" parameterType="ShopCarDto">
		delete from ShopCar where car_id = #{car_id}
		<if test="user_id != null">
			and user_id = #{user_id}
		</if>
		<if test="ieme != null">
			and ieme = #{ieme}
		</if>
	</delete>
	
	<!-- 6.批量删除购物车集合 -->
	<delete id="deleteShopCarBySomeCarId">
		delete from ShopCar where
		car_id in 
		 <foreach collection="list" item="car_id" index="index" open="(" close=")" separator=",">
             #{car_id}
         </foreach>
	</delete>
	
	<!-- 7.手机标识转用户 -->
	<update id="updateShopCarIemeToUser" parameterType="ShopCarDto">
		update ShopCar set user_id = #{user_id}, ieme = ''
		where car_id = #{car_id}
	</update>
	
	<!-- 8.修改购物车购买状态 -->
	<update id="updateCarStatus" parameterType="ShopCarDto">
		update ShopCar set car_status = #{car_status}
		where car_id = #{car_id}
		<if test="user_id != null">
			and user_id = #{user_id}
		</if>
		<if test="ieme != null">
			and ieme = #{ieme}
		</if>
	</update>
	
	<!-- 9.批量查询购物车 -->
	<select id="querySomeShopCar" resultType="ShopCarDto">
		select a.*,b.prod_name, b.prod_certno, b.prod_discount, b.prod_function, b.img_id, b.prod_taboo,b.prod_xl, 
			c.prod_format, c.prod_pack, c.prod_unit, c.prod_price, c.prod_sku, d.img_src, d.img_type from ShopCar a 
			left join Products b on a.prod_id = b.prod_id
			left join Formats c on a.format_id = c.format_id
			left join Img d on b.img_id = d.img_id 
			
			where car_id in
			<foreach collection="list" item="car_id" index="index" open="(" close=")" separator=",">
                #{car_id}
            </foreach>
	</select>
	
</mapper>